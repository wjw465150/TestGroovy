buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
        mavenLocal()
        //maven{ url "http://SVN:8081/nexus/content/groups/public"}
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }  //优先使用阿里的镜像
        mavenCentral()
        jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

group = 'wjw.test.springboot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenLocal()
    //maven{ url "http://SVN:8081/nexus/content/groups/public"}
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }  //优先使用阿里的镜像
    mavenCentral()
    jcenter()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging' 
	}
	compile('org.slf4j:slf4j-api')
	compile('org.slf4j:slf4j-log4j12')
	compile('commons-logging:commons-logging')
	
	compile('org.springframework.boot:spring-boot-starter-actuator') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
	compile('org.codehaus.groovy:groovy-all:3.0.6')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

//@wjw_note 添加接受JVM命令行参数,例如:-PjvmArgs="-XX:ReservedCodeCacheSize=96m -Xmx1g"
//@wjw_note 添加接受project命令行参数,例如:-PappArgs="--spring.profiles.active=dev"
bootRun {
	if ( project.hasProperty('jvmArgs') ) {
		jvmArgs = (project.jvmArgs.split("\\s+") as List)
	}
		
	if(project.hasProperty("appArgs")){
	  args(appArgs)
	  println "Task args:"+args
	}
}

